<?php
/**
 * Extras
 *
 * Extra changes e.g. Body Classes, Title, Excerpt length
 *
 * @package      responsive_mobile
 * @license      license.txt
 * @copyright    2014 CyberChimps Inc
 * @since        0.0.1
 *
 * Please do not edit this file. This file is part of the responsive_mobile Framework and all modifications
 * should be made in a child theme.
 */

// If this file is called directly, abort.
if ( ! defined( 'WPINC' ) ) {
	die;
}

/**
 * Adds custom classes to the array of body classes.
 *
 * @param array $classes Classes for the body element.
 * @return array
 */
function responsive_mobile_body_classes( $classes ) {
	// Adds a class of group-blog to blogs with more than 1 published author.
	if ( is_multi_author() ) {
		$classes[] = 'group-blog';
	}
	// Get Responsive theme option.
	$responsive_mobile_options = responsive_mobile_get_options();
	if( 1 == $responsive_mobile_options['front_page'] && is_front_page() ) {
		$classes[] = 'front-page';
	}

	$classes[] = responsive_mobile_get_layout();

	$classes = array_map( 'esc_attr', $classes );

	return $classes;
}
add_filter( 'body_class', 'responsive_mobile_body_classes' );

/**
 * Filters wp_title to print a neat <title> tag based on what is being viewed.
 *
 * @param string $title Default title text for current view.
 * @param string $sep Optional separator.
 * @return string The filtered title.
 */
function responsive_mobile_wp_title( $title, $sep ) {
	global $page, $paged;

	if ( is_feed() ) {
		return $title;
	}

	// Add the blog name
	$title .= get_bloginfo( 'name' );

	// Add the blog description for the home/front page.
	$site_description = get_bloginfo( 'description', 'display' );
	if ( $site_description && ( is_home() || is_front_page() ) ) {
		$title .= " $sep $site_description";
	}

	// Add a page number if necessary:
	if ( $paged >= 2 || $page >= 2 ) {
		$title .= " $sep " . sprintf( __( 'Page %s', 'responsive-mobile' ), max( $paged, $page ) );
	}

	return $title;
}
add_filter( 'wp_title', 'responsive_mobile_wp_title', 10, 2 );

/**
 * wp_title() Filter for better SEO.
 *
 * Adopted from Twenty Twelve
 * @see http://codex.wordpress.org/Plugin_API/Filter_Reference/wp_title
 *
 */
if( !function_exists( 'responsive_mobile_wp_title' ) && !defined( 'AIOSEOP_VERSION' ) ) {

	function responsive_mobile_wp_title( $title, $sep ) {
		global $page, $paged;

		if( is_feed() ) {
			return $title;
		}

		// Add the site name.
		$title .= get_bloginfo( 'name' );

		// Add the site description for the home/front page.
		$site_description = get_bloginfo( 'description', 'display' );
		if( $site_description && ( is_home() || is_front_page() ) ) {
			$title .= " $sep $site_description";
		}

		// Add a page number if necessary.
		if( $paged >= 2 || $page >= 2 ) {
			$title .= " $sep " . sprintf( __( 'Page %s', 'responsive-mobile' ), max( $paged, $page ) );
		}

		return $title;
	}

}
add_filter( 'wp_title', 'responsive_mobile_wp_title', 10, 2 );

/**
 * Sets the authordata global when viewing an author archive.
 *
 * This provides backwards compatibility with
 * http://core.trac.wordpress.org/changeset/25574
 *
 * It removes the need to call the_post() and rewind_posts() in an author
 * template to print information about the author.
 *
 * @global WP_Query $wp_query WordPress Query object.
 * @return void
 */
function responsive_mobile_setup_author() {
		global $wp_query;

		if ( $wp_query->is_author() && isset( $wp_query->post ) ) {
				$GLOBALS['authordata'] = get_userdata( $wp_query->post->post_author );
		}
}
add_action( 'wp', 'responsive_mobile_setup_author' );

/**
 * Filter 'get_comments_number'
 *
 * Filter 'get_comments_number' to display correct
 * number of comments (count only comments, not
 * trackbacks/pingbacks)
 *
 * Chip Bennett Contribution
 */
function responsive_mobile_comment_count( $count ) {
	if( !is_admin() ) {
		global $id;
		$comments         = get_comments( 'status=approve&post_id=' . $id );
		$comments_by_type = separate_comments( $comments );

		return count( $comments_by_type['comment'] );
	}
	else {
		return $count;
	}
}
add_filter( 'get_comments_number', 'responsive_mobile_comment_count', 0 );

/**
 * wp_list_comments() Pings Callback
 *
 * wp_list_comments() Callback function for
 * Pings (Trackbacks/Pingbacks)
 */
function responsive_mobile_comment_list_pings( $comment ) {
	$GLOBALS['comment'] = $comment;
	?>
	<li <?php comment_class(); ?> id="li-comment-<?php comment_ID(); ?>"><?php echo comment_author_link(); ?></li>
<?php
}

/**
 * Sets the post excerpt length to 40 words.
 * Adopted from Coraline
 */
function responsive_mobile_excerpt_length( $length ) {
	return 40;
}
add_filter( 'excerpt_length', 'responsive_mobile_excerpt_length' );

/**
 * Returns a "Read more" link for excerpts
 */
function responsive_mobile_read_more() {
	return sprintf( __( 'Read more %s', 'responsive-mobile' ), '<span class="screen-reader-text">' . get_the_title() . '</span><span class="meta-nav"> &#8250;</span>' );
}

/**
 * Replaces "[...]" (appended to automatically generated excerpts) with an ellipsis and responsive_mobile_read_more_link().
 */
function responsive_mobile_auto_excerpt_more( $more ) {

	if( false !== $more ) {
		$more = '<span class="ellipsis">&hellip;</span>';
	}

	return $more . '<div class="read-more"><a href="' . get_permalink() . '">' . responsive_mobile_read_more() . '</a></div><!-- end of .read-more -->';

}
add_filter( 'excerpt_more', 'responsive_mobile_auto_excerpt_more' );

/**
 * Adds a pretty "Read more" link to custom defined post excerpts.
 */
function responsive_mobile_custom_excerpt_more( $output ) {
	if( has_excerpt() && !is_attachment() ) {
		$output .= responsive_mobile_auto_excerpt_more( false );
	}

	return $output;
}
add_filter( 'get_the_excerpt', 'responsive_mobile_custom_excerpt_more' );

/**
 * This function removes default styles set by WordPress recent comments widget.
 */
function responsive_mobile_remove_recent_comments_style() {
	global $wp_widget_factory;
	if( isset( $wp_widget_factory->widgets['WP_Widget_Recent_Comments'] ) ) {
		remove_action( 'wp_head', array( $wp_widget_factory->widgets['WP_Widget_Recent_Comments'], 'recent_comments_style' ) );
	}
}
add_action( 'widgets_init', 'responsive_mobile_remove_recent_comments_style' );

/**
 * This function removes WordPress generated category and tag atributes.
 * For W3C validation purposes only.
 *
 */
function responsive_mobile_category_rel_removal( $output ) {
	$output = str_replace( ' rel="category tag"', '', $output );

	return $output;
}
add_filter( 'wp_list_categories', 'responsive_mobile_category_rel_removal' );
add_filter( 'the_category', 'responsive_mobile_category_rel_removal' );

/**
 * Front Page function starts here. The Front page overides WP's show_on_front option. So when show_on_front option changes it sets the themes front_page to 0 therefore displaying the new option
 */
function responsive_mobile_front_page_override( $new, $orig ) {
	$responsive_mobile_options = responsive_mobile_get_options();

	if( $orig !== $new ) {
		$responsive_mobile_options['front_page'] = 0;
		update_option( 'responsive_mobile_theme_options', $responsive_mobile_options );
	}

	return $new;
}
add_filter( 'pre_update_option_show_on_front', 'responsive_mobile_front_page_override', 10, 2 );

/**
 * Helps file locations in child themes. If the file is not being overwritten by the child theme then
 * return the parent theme location of the file. Great for images.
 *
 * @param $dir string directory
 *
 * @return string complete uri
 */
function responsive_mobile_child_uri( $dir ) {
	if( is_child_theme() ) {
		$directory = get_stylesheet_directory() . $dir;
		if( is_file( $directory ) ) {
			$file = get_stylesheet_directory_uri() . $dir;
		} else {
			$file = get_template_directory_uri() . $dir;
		}
	} else {
		$file = get_template_directory_uri() . $dir;
	}

	return $file;
}

/**
 * Run the same code as WordPress core does on the content
 */
function responsive_mobile_esc_content( $content ) {
	$content = str_replace( ']]>', ']]&gt;', $content );
	echo $content;
}
